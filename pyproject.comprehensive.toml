[project]
name = "dsml-ai"
version = "0.1.0"
description = "DS + ML playground with modular stacks"
authors = [
    {name = "pitcany",email = "pitcany@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["data science", "machine learning", "deep learning", "bayesian", "time series", "visualization"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

# --- Core scientific stack (always installed) ---
numpy = "<2.0"
pandas = "^2.2"
scipy = "^1.12"
scikit-learn = "^1.4"
matplotlib = "^3.8"
seaborn = "^0.12"
jupyterlab = "^4.0"
notebook = "^7.0"
ipykernel = "^6.29"

# --- Optional dependencies, install via extras ---
torch = { version = "2.2.2", optional = true }
torchvision = { version = "0.17.2", optional = true }
torchaudio = { version = "2.2.2", optional = true }
tensorflow = { version = "2.16", optional = true }
jax = { version = "0.4.28", extras = ["cpu"], optional = true }
flax = { version = "^0.8", optional = true }
optax = { version = "^0.2", optional = true }

xgboost = { version = "^2.0", optional = true }
lightgbm = { version = "^4.3", optional = true }
catboost = { version = "^1.2", optional = true }

pymc = { version = "^5.10", optional = true }
numpyro = { version = "^0.14", optional = true }
cmdstanpy = { version = "^1.2.5", optional = true }
arviz = { version = "^0.17", optional = true }

transformers = { version = "^4.44", extras = ["torch"], optional = true }
datasets = { version = "^3.0", optional = true }
tokenizers = { version = "^0.20", optional = true }
spacy = { version = "^3.7", optional = true }
sentencepiece = { version = "^0.2", optional = true }

timm = { version = "^1.0", optional = true }
opencv-python = { version = "^4.10", optional = true }

statsmodels = { version = "^0.14", optional = true }
darts = { version = "^0.30", optional = true }
prophet = { version = "^1.1", optional = true }

optuna = { version = "^3.6", optional = true }
ray = { version = "^2.36", extras = ["default"], optional = true }
mlflow = { version = "^2.17", optional = true }
onnxruntime = { version = "^1.20", optional = true }

autogluon = { version = "^1.4.0", optional = true }
sortedcontainers = { version = "^2.4.0", optional = true }
pyllist = { version = "^0.3", optional = true }
llist = { version = "^0.7.1", optional = true }
cvxpy = { version = "^1.7.3", optional = true }
gurobipy = { version = "^12.0.3", optional = true }

# Extended visualization and big-data support
plotly = { version = "^5.0", optional = true }
altair = { version = "^5.0", optional = true }
bokeh = { version = "^3.0", optional = true }
datashader = { version = "^0.14", optional = true }

# Explainability tools
shap = { version = "^0.42", optional = true }
lime = { version = "^0.2.0", optional = true }

# Big-data & analytics
dask = { version = "^2024.1", optional = true }
pyarrow = { version = "^12.0", optional = true }
fastparquet = { version = "^2024.1", optional = true }

# Geospatial and scientific data formats
geopandas = { version = "^0.14", optional = true }
xarray = { version = "^2023.11", optional = true }
networkx = { version = "^3.1", optional = true }

[tool.poetry.dev-dependencies]
pytest = "^8.4.2"
black = "^25.9.0"
ruff = "^0.6"

[tool.poetry.extras]
dl = ["torch", "torchvision", "torchaudio", "tensorflow", "jax", "flax", "optax"]
boost = ["xgboost", "lightgbm", "catboost"]
bayesian = ["pymc", "numpyro", "cmdstanpy", "arviz"]
nlp = ["transformers", "datasets", "tokenizers", "spacy", "sentencepiece"]
vision = ["timm", "opencv-python"]
timeseries = ["statsmodels", "darts", "prophet"]
optimize = ["optuna", "ray", "mlflow", "onnxruntime"]
automl = ["autogluon"]
containers = ["sortedcontainers", "pyllist", "llist"]
optim = ["cvxpy", "gurobipy"]

# Extended extras for broader DS & ML support
viz_ext = ["plotly", "altair", "bokeh", "datashader"]
explainability = ["shap", "lime"]
bigdata = ["dask", "pyarrow", "fastparquet"]
geospatial = ["geopandas", "xarray", "networkx"]
all = ["dl", "boost", "bayesian", "nlp", "vision", "timeseries", "optimize", "automl", "containers", "optim", "viz_ext", "explainability", "bigdata", "geospatial"]

[tool.poetry]
package-mode = true
packages = [
  { include = "dsml_ai", from = "src" }
]

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"
